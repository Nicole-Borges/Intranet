{"version":3,"file":"static/js/6607.41f30159.chunk.js","mappings":"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","sources":["pages/forms/Advanced.tsx","pages/forms/hooks/useFormValidation.ts","pages/forms/hooks/useTypeahead.ts"],"sourcesContent":["import { Row, Col, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { HyperDatepicker, PageTitle } from 'components';\r\nimport { useDatePicker } from 'hooks';\r\nimport { useTypeahead } from './hooks';\r\n\r\nconst ReactSelect = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">\r\n                    <a rel=\"noreferrer\" href=\"https://github.com/JedWatson/react-select\" target=\"_blank\">\r\n                        React select\r\n                    </a>\r\n                </h4>\r\n                <p className=\"mb-1 mt-2 fw-bold text-muted\">Single Selection</p>\r\n                <p className=\"text-muted font-14\">React-Select based Select element</p>\r\n                <Select\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    options={[\r\n                        { value: 'chocolate', label: 'Chocolate' },\r\n                        { value: 'strawberry', label: 'Strawberry' },\r\n                        { value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                ></Select>\r\n\r\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\r\n                <p className=\"text-muted font-14\">React-Select based Select (Multiple) element</p>\r\n                <Select\r\n                    isMulti={true}\r\n                    options={[\r\n                        { value: 'chocolate', label: 'Chocolate' },\r\n                        { value: 'strawberry', label: 'Strawberry' },\r\n                        { value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                ></Select>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst Typeaheads = () => {\r\n    const { options, singleSelections, multiSelections, onChangeSingleSelection, onChangeMultipleSelection } =\r\n        useTypeahead();\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">\r\n                    <a rel=\"noreferrer\" href=\"http://ericgio.github.io/react-bootstrap-typeahead/\" target=\"_blank\">\r\n                        Typeahead\r\n                    </a>\r\n                </h4>\r\n                <p className=\"mb-1 mt-2 fw-bold text-muted\">Single Selection</p>\r\n                <p className=\"text-muted font-14\">Typeahead based Select element</p>\r\n                <Typeahead\r\n                    id=\"select2\"\r\n                    labelKey={'label'}\r\n                    multiple={false}\r\n                    onChange={onChangeSingleSelection}\r\n                    options={options}\r\n                    placeholder=\"Choose a state...\"\r\n                    selected={singleSelections}\r\n                />\r\n\r\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\r\n                <p className=\"text-muted font-14\">Typeahead based Select (Multiple) element</p>\r\n                <Typeahead\r\n                    id=\"select3\"\r\n                    labelKey=\"label\"\r\n                    multiple\r\n                    onChange={onChangeMultipleSelection}\r\n                    options={options}\r\n                    placeholder=\"Choose a state...\"\r\n                    selected={multiSelections}\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DatePickers = () => {\r\n    const { selectedDate, onDateChange } = useDatePicker();\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\r\n                <p className=\"text-muted font-14\">\r\n                    A simple date picker using{' '}\r\n                    <a rel=\"noreferrer\" href=\"https://reactdatepicker.com/\" target=\"_blank\">\r\n                        ReactJS Datepicker\r\n                    </a>\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label>Single Date</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                value={selectedDate}\r\n                                onChange={(date) => {\r\n                                    onDateChange(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label>Single Date with multiple months</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                monthsShown={2}\r\n                                value={selectedDate}\r\n                                onChange={(date) => {\r\n                                    onDateChange(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group mb-3\">\r\n                            <label className=\"form-label\">Custom date format</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                dateFormat=\"yyyy-MM-dd\"\r\n                                value={selectedDate}\r\n                                onChange={(date) => {\r\n                                    onDateChange(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label>Specific date range</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                minDate={new Date()}\r\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\r\n                                value={selectedDate}\r\n                                onChange={(date) => {\r\n                                    onDateChange(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label>Select Time</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                showTimeSelect\r\n                                timeFormat=\"HH:mm\"\r\n                                tI={60}\r\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                timeCaption=\"time\"\r\n                                value={selectedDate}\r\n                                onChange={(date) => {\r\n                                    onDateChange(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label>Time only</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                tI={60}\r\n                                dateFormat=\"h:mm aa\"\r\n                                timeCaption=\"Time\"\r\n                                value={selectedDate}\r\n                                onChange={(date) => {\r\n                                    onDateChange(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst InputMasks = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Input Masks</h4>\r\n                <p className=\"text-muted font-14\">\r\n                    Input masks by{' '}\r\n                    <Link\r\n                        rel=\"noreferrer\"\r\n                        to={{ pathname: 'https://github.com/text-mask/text-mask/tree/master/react#readme' }}\r\n                        target=\"_blank\"\r\n                    >\r\n                        react-text-mask\r\n                    </Link>\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone Number with Area Code</label> <br />\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[1-9]/,\r\n                                    /\\d/,\r\n                                    ')',\r\n                                    ' ',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    '-',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                ]}\r\n                                placeholder=\"(__) ____-____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>US Phone Number</label> <br />\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[1-9]/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    ')',\r\n                                    ' ',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    '-',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                ]}\r\n                                placeholder=\"(___) ___-____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Date</label> <br />\r\n                            <MaskedInput\r\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n                                placeholder=\"__/__/____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Time</label> <br />\r\n                            <MaskedInput\r\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\r\n                                placeholder=\"__:__:__\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst FormAdvanced = () => {\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Forms', path: '/forms/advanced' },\r\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\r\n                ]}\r\n                title={'Form Advanced'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <ReactSelect />\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Typeaheads />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <DatePickers />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <InputMasks />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormAdvanced;\r\n","import { useToggle } from 'hooks';\r\n\r\nexport default function useFormValidation() {\r\n    const [isValidated, , setValidated] = useToggle();\r\n\r\n    /*\r\n     * handle form submission\r\n     */\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated();\r\n    };\r\n\r\n    return {\r\n        isValidated,\r\n        handleSubmit,\r\n    };\r\n}\r\n","import { useState } from 'react';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\n\r\ntype TypeaheadOption = string | Record<string, Object>;\r\n\r\nexport default function useTypeahead() {\r\n    const [singleSelections, setSingleSelections] = useState<TypeaheadOption[]>([]);\r\n    const [multiSelections, setMultiSelections] = useState<TypeaheadOption[]>([]);\r\n\r\n    const options: Array<TypeaheadOption> = [\r\n        { id: 1, value: 'chocolate', label: 'Chocolate' },\r\n        { id: 2, value: 'strawberry', label: 'Strawberry' },\r\n        { id: 3, value: 'vanilla', label: 'Vanilla' },\r\n    ];\r\n\r\n    const onChangeSingleSelection = (selected: TypeaheadOption[]) => {\r\n        setSingleSelections(selected);\r\n    };\r\n\r\n    const onChangeMultipleSelection = (selected: TypeaheadOption[]) => {\r\n        setMultiSelections(selected);\r\n    };\r\n\r\n    return {\r\n        options,\r\n        singleSelections,\r\n        multiSelections,\r\n        onChangeSingleSelection,\r\n        onChangeMultipleSelection,\r\n    };\r\n}\r\n"],"names":["ReactSelect","className","rel","href","target","classNamePrefix","options","value","label","isMulti","Typeaheads","useTypeahead","singleSelections","multiSelections","onChangeSingleSelection","onChangeMultipleSelection","id","labelKey","multiple","onChange","placeholder","selected","DatePickers","useDatePicker","selectedDate","onDateChange","lg","hideAddon","date","monthsShown","dateFormat","minDate","Date","maxDate","setDate","getDate","showTimeSelect","timeFormat","tI","timeCaption","showTimeSelectOnly","InputMasks","to","pathname","mask","breadCrumbItems","path","active","title","useFormValidation","useToggle","isValidated","setValidated","handleSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","useState","setSingleSelections","setMultiSelections"],"sourceRoot":""}
{"version":3,"file":"static/js/4070.b23a6c9d.chunk.js","mappings":"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","sources":["pages/forms/Validation.tsx","pages/forms/hooks/useFormValidation.ts","pages/forms/hooks/useTypeahead.ts"],"sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Button, InputGroup, Form } from 'react-bootstrap';\r\nimport { PageTitle } from 'components';\r\nimport { useFormValidation } from './hooks';\r\n\r\nconst FormValidationWithTooltip = () => {\r\n    const { isValidated, handleSubmit } = useFormValidation();\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Tooltips</h4>\r\n\r\n                <Form noValidate validated={isValidated} onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip01\">\r\n                        <Form.Label>First name</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\r\n                        <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip02\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\r\n                        <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"position-relative mb-3\" controlId=\"validationCustonTooltipme\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                                Please choose a username.\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip03\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"City\" required />\r\n                        <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                            Please provide a valid city.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip04\">\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"State\" required />\r\n                        <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                            Please provide a valid state.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip05\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Zip\" required />\r\n                        <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                            Please provide a valid zip.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"position-relative mb-3\">\r\n                        <Form.Check\r\n                            required\r\n                            label=\"Agree to terms and conditions\"\r\n                            feedback=\"You must agree before submitting.\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Submit form</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst FormValidation = () => {\r\n    const { isValidated, handleSubmit } = useFormValidation();\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Forms', path: '/forms/validation' },\r\n                    { label: 'Form Validation', path: '/forms/validation', active: true },\r\n                ]}\r\n                title={'Form Validation'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Form noValidate validated={isValidated} onSubmit={handleSubmit}>\r\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\r\n                                    <Form.Label>First name</Form.Label>\r\n                                    <Form.Control required type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom02\">\r\n                                    <Form.Label>Last name</Form.Label>\r\n                                    <Form.Control required type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\r\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustomUsername\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Username\"\r\n                                            aria-describedby=\"inputGroupPrepend\"\r\n                                            required\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please choose a username.\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom03\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"City\" required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid city.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom04\">\r\n                                    <Form.Label>State</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"State\" required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid state.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom05\">\r\n                                    <Form.Label>Zip</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Zip\" required />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please provide a valid zip.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Check\r\n                                        required\r\n                                        label=\"Agree to terms and conditions\"\r\n                                        feedback=\"You must agree before submitting.\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\">Submit form</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col lg={6}>\r\n                    <FormValidationWithTooltip />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormValidation;\r\n","import { useToggle } from 'hooks';\r\n\r\nexport default function useFormValidation() {\r\n    const [isValidated, , setValidated] = useToggle();\r\n\r\n    /*\r\n     * handle form submission\r\n     */\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated();\r\n    };\r\n\r\n    return {\r\n        isValidated,\r\n        handleSubmit,\r\n    };\r\n}\r\n","import { useState } from 'react';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\n\r\ntype TypeaheadOption = string | Record<string, Object>;\r\n\r\nexport default function useTypeahead() {\r\n    const [singleSelections, setSingleSelections] = useState<TypeaheadOption[]>([]);\r\n    const [multiSelections, setMultiSelections] = useState<TypeaheadOption[]>([]);\r\n\r\n    const options: Array<TypeaheadOption> = [\r\n        { id: 1, value: 'chocolate', label: 'Chocolate' },\r\n        { id: 2, value: 'strawberry', label: 'Strawberry' },\r\n        { id: 3, value: 'vanilla', label: 'Vanilla' },\r\n    ];\r\n\r\n    const onChangeSingleSelection = (selected: TypeaheadOption[]) => {\r\n        setSingleSelections(selected);\r\n    };\r\n\r\n    const onChangeMultipleSelection = (selected: TypeaheadOption[]) => {\r\n        setMultiSelections(selected);\r\n    };\r\n\r\n    return {\r\n        options,\r\n        singleSelections,\r\n        multiSelections,\r\n        onChangeSingleSelection,\r\n        onChangeMultipleSelection,\r\n    };\r\n}\r\n"],"names":["FormValidationWithTooltip","useFormValidation","isValidated","handleSubmit","className","noValidate","validated","onSubmit","controlId","required","type","placeholder","defaultValue","tooltip","hasValidation","id","label","feedback","breadCrumbItems","path","active","title","lg","useToggle","setValidated","event","currentTarget","checkValidity","preventDefault","stopPropagation","useTypeahead","useState","singleSelections","setSingleSelections","multiSelections","setMultiSelections","options","value","onChangeSingleSelection","selected","onChangeMultipleSelection"],"sourceRoot":""}
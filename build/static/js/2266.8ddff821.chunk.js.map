{"version":3,"file":"static/js/2266.8ddff821.chunk.js","mappings":"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","sources":["pages/uikit/Tabs.tsx"],"sourcesContent":["import { Row, Col, Card, Tab, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { PageTitle } from 'components';\r\n\r\ntype TabContentItem = {\r\n    id: string;\r\n    icon: string;\r\n    title: string;\r\n    text: string;\r\n};\r\n\r\nconst TabsExample = () => {\r\n    const tabContents: TabContentItem[] = [\r\n        {\r\n            id: '1',\r\n            title: 'Home',\r\n            icon: 'mdi mdi-home-variant',\r\n            text: 'Home - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\r\n        },\r\n        {\r\n            id: '2',\r\n            title: 'Profile',\r\n            icon: 'mdi mdi-account-circle',\r\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\r\n        },\r\n        {\r\n            id: '3',\r\n            title: 'Settings',\r\n            icon: 'mdi mdi-cog-outline',\r\n            text: 'Settings - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Base UI', path: '/ui/tabs' },\r\n                    { label: 'Tabs', path: '/ui/tabs', active: true },\r\n                ]}\r\n                title={'Tabs'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Default Tabs</h4>\r\n                            <p className=\"text-muted font-14 mb-3\">Simple widget of tabbable panes of local content.</p>\r\n\r\n                            <Tab.Container defaultActiveKey=\"Profile\">\r\n                                <Nav variant=\"tabs\">\r\n                                    {tabContents.map((tab, index) => {\r\n                                        return (\r\n                                            <Nav.Item key={index.toString()}>\r\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\r\n                                                    <i\r\n                                                        className={classnames(tab.icon, 'd-md-none', 'd-block', 'me-1')}\r\n                                                    ></i>\r\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\r\n                                                </Nav.Link>\r\n                                            </Nav.Item>\r\n                                        );\r\n                                    })}\r\n                                </Nav>\r\n\r\n                                <Tab.Content>\r\n                                    {tabContents.map((tab, index) => {\r\n                                        return (\r\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index.toString()}>\r\n                                                <Row>\r\n                                                    <Col sm=\"12\">\r\n                                                        <p className=\"mt-3\">{tab.text}</p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Tab.Pane>\r\n                                        );\r\n                                    })}\r\n                                </Tab.Content>\r\n                            </Tab.Container>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n                {/* tab justified */}\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Tabs Justified</h4>\r\n                            <p className=\"text-muted font-14 mb-3\">\r\n                                If you want each NavItem to be the same size use <code>justify</code>.\r\n                            </p>\r\n\r\n                            <Tab.Container defaultActiveKey=\"Profile\">\r\n                                <Nav variant=\"pills\" justify className=\"bg-nav-pills\">\r\n                                    {tabContents.map((tab, index) => {\r\n                                        return (\r\n                                            <Nav.Item key={index.toString()}>\r\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\r\n                                                    <i\r\n                                                        className={classnames(tab.icon, 'd-md-none', 'd-block', 'me-1')}\r\n                                                    ></i>\r\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\r\n                                                </Nav.Link>\r\n                                            </Nav.Item>\r\n                                        );\r\n                                    })}\r\n                                </Nav>\r\n\r\n                                <Tab.Content>\r\n                                    {tabContents.map((tab, index) => {\r\n                                        return (\r\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index.toString()}>\r\n                                                <Row>\r\n                                                    <Col sm=\"12\">\r\n                                                        <p className=\"mt-3\">{tab.text}</p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Tab.Pane>\r\n                                        );\r\n                                    })}\r\n                                </Tab.Content>\r\n                            </Tab.Container>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* vertical tab */}\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Tabs Vertical Left</h4>\r\n                            <p className=\"text-muted font-14 mb-3\">\r\n                                You can stack your navigation by changing the flex item direction with the{' '}\r\n                                <code>.flex-column</code> utility.\r\n                            </p>\r\n\r\n                            <Row>\r\n                                <Tab.Container defaultActiveKey=\"Profile\">\r\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\r\n                                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                                            {tabContents.map((tab, index) => {\r\n                                                return (\r\n                                                    <Nav.Item key={index.toString()}>\r\n                                                        <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\r\n                                                            <i\r\n                                                                className={classnames(\r\n                                                                    tab.icon,\r\n                                                                    'd-md-none',\r\n                                                                    'd-block',\r\n                                                                    'me-1'\r\n                                                                )}\r\n                                                            ></i>\r\n                                                            <span className=\"d-none d-md-block\">{tab.title}</span>\r\n                                                        </Nav.Link>\r\n                                                    </Nav.Item>\r\n                                                );\r\n                                            })}\r\n                                        </Nav>\r\n                                    </Col>\r\n\r\n                                    <Col sm={9}>\r\n                                        <Tab.Content>\r\n                                            {tabContents.map((tab, index) => {\r\n                                                return (\r\n                                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index.toString()}>\r\n                                                        <Row>\r\n                                                            <Col sm=\"12\">\r\n                                                                <p className=\"mt-3\">{tab.text}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Tab.Pane>\r\n                                                );\r\n                                            })}\r\n                                        </Tab.Content>\r\n                                    </Col>\r\n                                </Tab.Container>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Tabs Vertical Right</h4>\r\n                            <p className=\"text-muted font-14 mb-3\">\r\n                                You can stack your navigation by changing the flex item direction with the{' '}\r\n                                <code>.flex-column</code> utility.\r\n                            </p>\r\n\r\n                            <Row>\r\n                                <Tab.Container defaultActiveKey=\"Profile\">\r\n                                    <Col sm={9}>\r\n                                        <Tab.Content>\r\n                                            {tabContents.map((tab, index) => {\r\n                                                return (\r\n                                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index.toString()}>\r\n                                                        <Row>\r\n                                                            <Col sm=\"12\">\r\n                                                                <p className=\"mt-3\">{tab.text}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Tab.Pane>\r\n                                                );\r\n                                            })}\r\n                                        </Tab.Content>\r\n                                    </Col>\r\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\r\n                                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                                            {tabContents.map((tab, index) => {\r\n                                                return (\r\n                                                    <Nav.Item key={index.toString()}>\r\n                                                        <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\r\n                                                            <i\r\n                                                                className={classnames(\r\n                                                                    tab.icon,\r\n                                                                    'd-md-none',\r\n                                                                    'd-block',\r\n                                                                    'me-1'\r\n                                                                )}\r\n                                                            ></i>\r\n                                                            <span className=\"d-none d-md-block\">{tab.title}</span>\r\n                                                        </Nav.Link>\r\n                                                    </Nav.Item>\r\n                                                );\r\n                                            })}\r\n                                        </Nav>\r\n                                    </Col>\r\n                                </Tab.Container>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Bordered Tabs */}\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Tabs Bordered</h4>\r\n                            <p className=\"text-muted font-14 mb-3\">\r\n                                The navigation item can have a simple bottom border as well. Just specify the class{' '}\r\n                                <code>.nav-bordered</code>.\r\n                            </p>\r\n\r\n                            <Tab.Container defaultActiveKey=\"Profile\">\r\n                                <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\r\n                                    {tabContents.map((tab, index) => {\r\n                                        return (\r\n                                            <Nav.Item key={index.toString()} as=\"li\">\r\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\r\n                                                    <i\r\n                                                        className={classnames(tab.icon, 'd-md-none', 'd-block', 'me-1')}\r\n                                                    ></i>\r\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\r\n                                                </Nav.Link>\r\n                                            </Nav.Item>\r\n                                        );\r\n                                    })}\r\n                                </Nav>\r\n\r\n                                <Tab.Content>\r\n                                    {tabContents.map((tab, index) => {\r\n                                        return (\r\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index.toString()}>\r\n                                                <Row>\r\n                                                    <Col sm=\"12\">\r\n                                                        <p className=\"mt-3\">{tab.text}</p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Tab.Pane>\r\n                                        );\r\n                                    })}\r\n                                </Tab.Content>\r\n                            </Tab.Container>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n                {/* tab justified */}\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Tabs Bordered Justified</h4>\r\n                            <p className=\"text-muted font-14 mb-3\">\r\n                                The navigation item with a simple bottom border and justified.\r\n                            </p>\r\n\r\n                            <Tab.Container defaultActiveKey=\"Profile\">\r\n                                <Nav variant=\"tabs\" justify className=\"nav-bordered\" as=\"ul\">\r\n                                    {tabContents.map((tab, index) => {\r\n                                        return (\r\n                                            <Nav.Item key={index.toString()} as=\"li\">\r\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\r\n                                                    <i\r\n                                                        className={classnames(tab.icon, 'd-md-none', 'd-block', 'me-1')}\r\n                                                    ></i>\r\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\r\n                                                </Nav.Link>\r\n                                            </Nav.Item>\r\n                                        );\r\n                                    })}\r\n                                </Nav>\r\n\r\n                                <Tab.Content>\r\n                                    {tabContents.map((tab, index) => {\r\n                                        return (\r\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index.toString()}>\r\n                                                <Row>\r\n                                                    <Col sm=\"12\">\r\n                                                        <p className=\"mt-3\">{tab.text}</p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Tab.Pane>\r\n                                        );\r\n                                    })}\r\n                                </Tab.Content>\r\n                            </Tab.Container>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TabsExample;\r\n"],"names":["tabContents","id","title","icon","text","breadCrumbItems","label","path","active","lg","className","defaultActiveKey","variant","map","tab","index","as","Link","to","eventKey","classnames","toString","sm","justify"],"sourceRoot":""}
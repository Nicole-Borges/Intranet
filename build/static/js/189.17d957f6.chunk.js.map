{"version":3,"file":"static/js/189.17d957f6.chunk.js","mappings":"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","sources":["pages/other/PreLoader/Statistics.tsx","pages/other/PreLoader/CampaignsChart.tsx","pages/other/PreLoader/RevenueChart.tsx","pages/other/PreLoader/Performers.tsx","pages/other/PreLoader/Leads.tsx","pages/other/PreLoader/CampaignWidget.tsx","pages/other/PreLoader/data.ts","pages/other/PreLoader/PreLoader.tsx","pages/other/hooks/usePreloader.ts","pages/other/hooks/useMaintenance.ts","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import { Row, Col } from 'react-bootstrap';\r\nimport { StatisticsChartWidget } from 'components';\r\n\r\nconst Statistics = () => {\r\n    return (\r\n        <Row>\r\n            <Col md={6} xl={3}>\r\n                <StatisticsChartWidget\r\n                    description=\"Campaign Sent\"\r\n                    title=\"Campaign Sent\"\r\n                    stats=\"9,184\"\r\n                    trend={{\r\n                        textClass: 'text-success',\r\n                        icon: 'mdi mdi-arrow-up-bold',\r\n                        value: '3.27%',\r\n                    }}\r\n                    colors={['#727cf5']}\r\n                    data={[25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54]}\r\n                ></StatisticsChartWidget>\r\n            </Col>\r\n            <Col md={6} xl={3}>\r\n                <StatisticsChartWidget\r\n                    description=\"New Leads\"\r\n                    title=\"New Leads\"\r\n                    stats=\"3,254\"\r\n                    trend={{\r\n                        textClass: 'text-danger',\r\n                        icon: 'mdi mdi-arrow-down-bold',\r\n                        value: '5.38%',\r\n                    }}\r\n                    colors={['#0acf97']}\r\n                    type=\"line\"\r\n                    data={[25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54]}\r\n                ></StatisticsChartWidget>\r\n            </Col>\r\n            <Col md={6} xl={3}>\r\n                <StatisticsChartWidget\r\n                    description=\"Deals\"\r\n                    title=\"Deals\"\r\n                    stats=\"861\"\r\n                    trend={{\r\n                        textClass: 'text-success',\r\n                        icon: 'mdi mdi-arrow-up-bold',\r\n                        value: '4.87%',\r\n                    }}\r\n                    colors={['#727cf5']}\r\n                    data={[12, 14, 2, 47, 42, 15, 47, 75, 65, 19, 14]}\r\n                ></StatisticsChartWidget>\r\n            </Col>\r\n            <Col md={6} xl={3}>\r\n                <StatisticsChartWidget\r\n                    description=\"Booked Revenue\"\r\n                    title=\"Booked Revenue\"\r\n                    stats=\"$253k\"\r\n                    trend={{\r\n                        textClass: 'text-success',\r\n                        icon: 'mdi mdi-arrow-up-bold',\r\n                        value: '11.7%',\r\n                    }}\r\n                    colors={['#0acf97']}\r\n                    data={[47, 45, 74, 14, 56, 74, 14, 11, 7, 39, 82]}\r\n                ></StatisticsChartWidget>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n","import { Card, Row, Col } from 'react-bootstrap';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\nimport { CardTitle } from 'components';\r\n\r\nconst CampaignsChart = () => {\r\n    const apexBarChartOpts: ApexOptions = {\r\n        grid: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n            },\r\n        },\r\n        chart: {\r\n            height: 320,\r\n            type: 'radialBar',\r\n        },\r\n        colors: ['#ffbc00', '#727cf5', '#0acf97'],\r\n        labels: ['Total Sent', 'Reached', 'Opened'],\r\n        plotOptions: {\r\n            radialBar: {\r\n                track: {\r\n                    margin: 8,\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    const apexBarChartData: number[] = [86, 36, 50];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <CardTitle\r\n                    containerClass=\"d-flex align-items-center justify-content-between mb-1\"\r\n                    title=\"Campaigns\"\r\n                    menuItems={[\r\n                        { label: 'Today' },\r\n                        { label: 'Yesterday' },\r\n                        { label: 'Last Week' },\r\n                        { label: 'Last Month' },\r\n                    ]}\r\n                />\r\n\r\n                <Chart\r\n                    options={apexBarChartOpts}\r\n                    series={apexBarChartData}\r\n                    type=\"radialBar\"\r\n                    className=\"apex-charts\"\r\n                    height={302}\r\n                />\r\n\r\n                <Row className=\"text-center mt-3\">\r\n                    <Col sm={4}>\r\n                        <i className=\"mdi mdi-send widget-icon rounded-circle bg-light-lighten text-muted\"></i>\r\n                        <h3 className=\"fw-normal mt-3\">\r\n                            <span>6,510</span>\r\n                        </h3>\r\n                        <p className=\"text-muted mb-0 mb-2\">\r\n                            <i className=\"mdi mdi-checkbox-blank-circle text-warning\"></i> Total Sent\r\n                        </p>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <i className=\"mdi mdi-flag-variant widget-icon rounded-circle bg-light-lighten text-muted\"></i>\r\n                        <h3 className=\"fw-normal mt-3\">\r\n                            <span>3,487</span>\r\n                        </h3>\r\n                        <p className=\"text-muted mb-0 mb-2\">\r\n                            <i className=\"mdi mdi-checkbox-blank-circle text-primary\"></i> Reached\r\n                        </p>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <i className=\"mdi mdi-email-open widget-icon rounded-circle bg-light-lighten text-muted\"></i>\r\n                        <h3 className=\"fw-normal mt-3\">\r\n                            <span>1,568</span>\r\n                        </h3>\r\n                        <p className=\"text-muted mb-0 mb-2\">\r\n                            <i className=\"mdi mdi-checkbox-blank-circle text-success\"></i> Opened\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CampaignsChart;\r\n","import { Card, Row, Col } from 'react-bootstrap';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\nimport { CardTitle } from 'components';\r\n\r\nconst RevenueChart = () => {\r\n    const apexLineChartWithLables: ApexOptions = {\r\n        chart: {\r\n            height: 336,\r\n            type: 'line',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 2,\r\n        },\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: [0.35, 1],\r\n        },\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        markers: {\r\n            size: 0,\r\n        },\r\n        colors: ['#0acf97', '#fa5c7c'],\r\n        yaxis: [\r\n            {\r\n                title: {\r\n                    text: 'Revenue (USD)',\r\n                },\r\n                min: 0,\r\n            },\r\n        ],\r\n        tooltip: {\r\n            shared: true,\r\n            intersect: false,\r\n            y: {\r\n                formatter: function (y) {\r\n                    if (typeof y !== 'undefined') {\r\n                        return y.toFixed(0) + 'k';\r\n                    }\r\n                    return y;\r\n                },\r\n            },\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        legend: {\r\n            fontSize: '14px',\r\n            fontFamily: '14px',\r\n            offsetY: -10,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    yaxis: {\r\n                        show: false,\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const apexLineChartWithLablesData: ApexAxisChartSeries = [\r\n        {\r\n            name: 'Total Revenue',\r\n            type: 'area',\r\n            data: [44, 55, 31, 47, 31, 43, 26, 41, 31, 47, 33, 43],\r\n        },\r\n        {\r\n            name: 'Total Pipeline',\r\n            type: 'line',\r\n            data: [55, 69, 45, 61, 43, 54, 37, 52, 44, 61, 43, 56],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <CardTitle\r\n                    containerClass=\"d-flex align-items-center justify-content-between mb-3\"\r\n                    title=\"Revenue\"\r\n                    menuItems={[\r\n                        { label: 'Today' },\r\n                        { label: 'Yesterday' },\r\n                        { label: 'Last Week' },\r\n                        { label: 'Last Month' },\r\n                    ]}\r\n                />\r\n\r\n                <div className=\"chart-content-bg\">\r\n                    <Row className=\"text-center\">\r\n                        <Col sm={6}>\r\n                            <p className=\"text-muted mb-0 mt-3\">Current Month</p>\r\n                            <h2 className=\"fw-normal mb-3\">\r\n                                <span>$42,025</span>\r\n                            </h2>\r\n                        </Col>\r\n                        <Col sm={6}>\r\n                            <p className=\"text-muted mb-0 mt-3\">Previous Month</p>\r\n                            <h2 className=\"fw-normal mb-3\">\r\n                                <span>$74,651</span>\r\n                            </h2>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                <div dir=\"ltr\">\r\n                    <Chart\r\n                        options={apexLineChartWithLables}\r\n                        series={apexLineChartWithLablesData}\r\n                        type=\"line\"\r\n                        className=\"apex-charts\"\r\n                        height={321}\r\n                    />\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RevenueChart;\r\n","import { Card, Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { CardTitle } from 'components';\r\nimport { TopPerformer } from './types';\r\n\r\ntype PerformersProps = {\r\n    topPerformanceData: TopPerformer[];\r\n};\r\n\r\nconst Performers = ({ topPerformanceData }: PerformersProps) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <CardTitle\r\n                    containerClass=\"d-flex align-items-center justify-content-between mb-2\"\r\n                    title=\"Top Performing\"\r\n                    menuItems={[{ label: 'Settings' }, { label: 'Action' }]}\r\n                />\r\n\r\n                <Table hover responsive striped size=\"sm\" className=\"table-centered mb-0 table-nowrap\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User</th>\r\n                            <th>Leads</th>\r\n                            <th>Deals</th>\r\n                            <th>Tasks</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(topPerformanceData || []).map((item, index) => {\r\n                            return (\r\n                                <tr key={index.toString()}>\r\n                                    <td>\r\n                                        <h5 className=\"font-15 mb-1 fw-normal\">{item.name}</h5>\r\n                                        <span className=\"text-muted font-13\">{item.position}</span>\r\n                                    </td>\r\n                                    <td>{item.leads}</td>\r\n                                    <td>{item.deals}</td>\r\n                                    <td>{item.tasks}</td>\r\n                                    <td className=\"table-action\">\r\n                                        <Link to=\"#\" className=\"action-icon\">\r\n                                            {' '}\r\n                                            <i className=\"mdi mdi-eye\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Performers;\r\n","import { Card } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\nimport { CardTitle } from 'components';\r\nimport { LeadItem } from './types';\r\n\r\ntype LeadsProps = {\r\n    recentLeads: LeadItem[];\r\n};\r\n\r\nconst Leads = ({ recentLeads }: LeadsProps) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <CardTitle\r\n                    containerClass=\"d-flex align-items-center justify-content-between mb-3\"\r\n                    title=\"Recent Leads\"\r\n                    menuItems={[{ label: 'Settings' }, { label: 'Action' }]}\r\n                />\r\n\r\n                {(recentLeads || []).map((item, index) => {\r\n                    return (\r\n                        <div\r\n                            key={index.toString()}\r\n                            className={classNames('d-flex', 'align-items-start', {\r\n                                'mt-3': index !== recentLeads.length,\r\n                            })}\r\n                        >\r\n                            <img\r\n                                className=\"me-3 rounded-circle\"\r\n                                src={item.profile}\r\n                                width=\"40\"\r\n                                alt=\"Generic placeholder\"\r\n                            />\r\n                            <div className=\"w-100 overflow-hidden\">\r\n                                <span\r\n                                    className={classNames('badge', 'float-end', {\r\n                                        'badge-warning-lighten': item.status === 'Cold',\r\n                                        'badge-danger-lighten': item.status === 'Lost',\r\n                                        'badge-success-lighten': item.status === 'Won',\r\n                                    })}\r\n                                >\r\n                                    {item.status} lead\r\n                                </span>\r\n                                <h5 className=\"mt-0 mb-1\">{item.name}</h5>\r\n                                <span className=\"font-13\">{item.email}</span>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Leads;\r\n","import { Card } from 'react-bootstrap';\r\nimport campaignSvg from 'assets/images/email-campaign.svg';\r\n\r\nconst CampaignWidget = () => {\r\n    return (\r\n        <Card className=\"cta-box bg-primary text-white\">\r\n            <Card.Body>\r\n                <div className=\"d-flex align-items-start align-items-center\">\r\n                    <div className=\"w-100 overflow-hidden\">\r\n                        <h2 className=\"mt-0\">\r\n                            <i className=\"mdi mdi-bullhorn-outline\"></i>\r\n                        </h2>\r\n                        <h3 className=\"m-0 fw-normal cta-box-title\">\r\n                            Enhance your <b>Campaign</b> for better outreach <i className=\"mdi mdi-arrow-right\"></i>\r\n                        </h3>\r\n                    </div>\r\n                    <img className=\"ms-3\" src={campaignSvg} width=\"120\" alt=\"Generic placeholder\" />\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CampaignWidget;\r\n","import { LeadItem, TopPerformer } from './types';\r\nimport avatar1 from 'assets/images/users/avatar-1.jpg';\r\nimport avatar2 from 'assets/images/users/avatar-2.jpg';\r\nimport avatar3 from 'assets/images/users/avatar-3.jpg';\r\nimport avatar4 from 'assets/images/users/avatar-4.jpg';\r\nimport avatar5 from 'assets/images/users/avatar-5.jpg';\r\nimport avatar6 from 'assets/images/users/avatar-6.jpg';\r\n\r\nconst topPerformanceData: TopPerformer[] = [\r\n    {\r\n        id: 1,\r\n        name: 'Jeremy Young',\r\n        position: 'Senior Sales Executive',\r\n        leads: 187,\r\n        deals: 154,\r\n        tasks: 49,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Thomas Krueger',\r\n        position: 'Senior Sales Executive',\r\n        leads: 235,\r\n        deals: 127,\r\n        tasks: 83,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Pete Burdine',\r\n        position: 'Senior Sales Executive',\r\n        leads: 365,\r\n        deals: 148,\r\n        tasks: 62,\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Mary Nelson',\r\n        position: 'Senior Sales Executive',\r\n        leads: 753,\r\n        deals: 159,\r\n        tasks: 258,\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Kevin Grove',\r\n        position: 'Senior Sales Executive',\r\n        leads: 458,\r\n        deals: 126,\r\n        tasks: 73,\r\n    },\r\n];\r\n\r\nconst recentLeads: LeadItem[] = [\r\n    {\r\n        id: 1,\r\n        name: 'Risa Pearson',\r\n        email: 'richard.john@mail.com',\r\n        profile: avatar2,\r\n        status: 'Cold',\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Margaret D. Evans',\r\n        email: 'margaret.evans@rhyta.com',\r\n        profile: avatar3,\r\n        status: 'Lost',\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Bryan J. Luellen',\r\n        email: 'bryuellen@dayrep.com',\r\n        profile: avatar4,\r\n        status: 'Won',\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Kathryn S. Collier',\r\n        email: 'collier@jourrapide.com',\r\n        profile: avatar5,\r\n        status: 'Cold',\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Timothy Kauper',\r\n        email: 'thykauper@rhyta.com',\r\n        profile: avatar1,\r\n        status: 'Cold',\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Zara Raws',\r\n        email: 'austin@dayrep.com',\r\n        profile: avatar6,\r\n        status: 'Won',\r\n    },\r\n];\r\n\r\nexport { topPerformanceData, recentLeads };\r\n","import { Row, Col } from 'react-bootstrap';\r\nimport { PageTitle, TodoList } from 'components';\r\nimport { usePreloader } from '../hooks';\r\nimport Statistics from './Statistics';\r\nimport CampaignsChart from './CampaignsChart';\r\nimport RevenueChart from './RevenueChart';\r\nimport Performers from './Performers';\r\nimport Leads from './Leads';\r\nimport CampaignWidget from './CampaignWidget';\r\nimport { topPerformanceData, recentLeads } from './data';\r\n\r\nconst PreLoader = () => {\r\n    usePreloader();\r\n\r\n    return (\r\n        <>\r\n            <div id=\"preloader\">\r\n                <div id=\"status\">\r\n                    <div className=\"bouncing-loader\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Dashboard', path: '/dashboard/crm' },\r\n                    { label: 'CRM', path: '/dashboard/crm', active: true },\r\n                ]}\r\n                title={'CRM'}\r\n            />\r\n\r\n            <Statistics />\r\n\r\n            <Row>\r\n                <Col lg={5}>\r\n                    <CampaignsChart />\r\n                </Col>\r\n                <Col lg={7}>\r\n                    <RevenueChart />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={4} lg={12}>\r\n                    <Performers topPerformanceData={topPerformanceData} />\r\n                </Col>\r\n                <Col xl={4} lg={6}>\r\n                    <Leads recentLeads={recentLeads} />\r\n                </Col>\r\n                <Col xl={4} lg={6}>\r\n                    <CampaignWidget />\r\n                    <TodoList height=\"224px\" />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { PreLoader };\r\n","import { useEffect } from 'react';\r\n\r\nexport default function usePreloader() {\r\n    useEffect(() => {\r\n        var opacity = 0;\r\n\r\n        const fade = () => {\r\n            let body = document.getElementById('preloader');\r\n            opacity = Number(window.getComputedStyle(body!).getPropertyValue('opacity'));\r\n            if (body && opacity > 0) {\r\n                opacity = opacity - 0.2;\r\n                body.style.opacity = String(opacity);\r\n            } else {\r\n                clearInterval(intervalId);\r\n                if (body) body.style.display = 'none';\r\n            }\r\n        };\r\n        let intervalId = setInterval(fade, 200);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nexport default function useMaintenance() {\r\n    useEffect(() => {\r\n        if (document.body) document.body.classList.remove('authentication-bg');\r\n    }, []);\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"names":["Row","Col","md","xl","description","title","stats","trend","textClass","icon","value","colors","data","type","Card","containerClass","menuItems","label","options","grid","padding","left","right","chart","height","labels","plotOptions","radialBar","track","margin","series","className","sm","dir","toolbar","show","stroke","curve","width","fill","opacity","markers","size","yaxis","text","min","tooltip","shared","intersect","y","formatter","toFixed","borderColor","legend","fontSize","fontFamily","offsetY","responsive","breakpoint","name","topPerformanceData","Table","hover","striped","map","item","index","position","leads","deals","tasks","to","toString","recentLeads","classNames","length","src","profile","alt","status","email","campaignSvg","id","avatar2","avatar3","avatar4","avatar5","avatar1","avatar6","PreLoader","usePreloader","breadCrumbItems","path","active","lg","useEffect","intervalId","setInterval","body","document","getElementById","Number","window","getComputedStyle","getPropertyValue","style","String","clearInterval","display","useMaintenance","classList","remove","React","ref","bsPrefix","bordered","borderless","variant","props","decoratedBsPrefix","useBootstrapPrefix","classes","table","_jsx","responsiveClass","children"],"sourceRoot":""}
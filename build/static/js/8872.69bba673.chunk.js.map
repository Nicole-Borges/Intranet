{"version":3,"file":"static/js/8872.69bba673.chunk.js","mappings":"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","sources":["pages/charts/Apex/LineChart.tsx","pages/charts/Apex/LineAnnotationChart.tsx","pages/charts/Apex/SplineAreaChart.tsx","pages/charts/Apex/StackedAreaChart.tsx","pages/charts/Apex/BarChart.tsx","pages/charts/Apex/StackedBarChart.tsx","pages/charts/Apex/DonutChart.tsx","pages/charts/Apex/PieChart.tsx","pages/charts/Apex/MixedChart.tsx","pages/charts/Apex/ApexChart.tsx"],"sourcesContent":["import Chart from 'react-apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\nconst LineChart = () => {\r\n    // default options\r\n    const apexLineChartWithLables: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            zoom: {\r\n                enabled: false,\r\n            },\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        colors: ['#727cf5', '#0acf97'],\r\n        dataLabels: {\r\n            enabled: true,\r\n        },\r\n        stroke: {\r\n            width: [3, 3],\r\n            curve: 'smooth',\r\n        },\r\n        title: {\r\n            text: 'Average High & Low Temperature',\r\n            align: 'left',\r\n            style: {\r\n                fontSize: '14px',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        markers: {\r\n            size: 6,\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n            title: {\r\n                text: 'Month',\r\n            },\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Temperature',\r\n            },\r\n            min: 5,\r\n            max: 40,\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'right',\r\n            floating: true,\r\n            offsetY: -25,\r\n            offsetX: -5,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    // chart data\r\n    const apexLineChartWithLablesData = [\r\n        {\r\n            name: 'High - 2018',\r\n            data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n            name: 'Low - 2018',\r\n            data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Line with Data Labels</h4>\r\n                <Chart\r\n                    options={apexLineChartWithLables}\r\n                    series={apexLineChartWithLablesData}\r\n                    type=\"line\"\r\n                    className=\"apex-charts\"\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default LineChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst LineAnnotationChart = () => {\r\n    // default options\r\n    const apexLineChartWithAnnotationOpts: ApexOptions = {\r\n        annotations: {\r\n            yaxis: [\r\n                {\r\n                    y: 8200,\r\n                    borderColor: '#0acf97',\r\n                    label: {\r\n                        borderColor: '#0acf97',\r\n                        style: {\r\n                            color: '#fff',\r\n                            background: '#0acf97',\r\n                        },\r\n                        text: 'Support',\r\n                    },\r\n                },\r\n            ],\r\n            xaxis: [\r\n                {\r\n                    x: new Date('23 Nov 2017').getTime(),\r\n                    borderColor: '#775DD0',\r\n                    label: {\r\n                        borderColor: '#775DD0',\r\n                        style: {\r\n                            color: '#fff',\r\n                            background: '#775DD0',\r\n                        },\r\n                        text: 'Anno Test',\r\n                    },\r\n                },\r\n                {\r\n                    x: new Date('03 Dec 2017').getTime(),\r\n                    borderColor: '#ffbc00',\r\n                    label: {\r\n                        borderColor: '#ffbc00',\r\n                        style: {\r\n                            color: '#fff',\r\n                            background: '#ffbc00',\r\n                        },\r\n                        orientation: 'horizontal',\r\n                        text: 'New Beginning',\r\n                    },\r\n                },\r\n            ],\r\n            points: [\r\n                {\r\n                    x: new Date('27 Nov 2017').getTime(),\r\n                    y: 8506.9,\r\n                    marker: {\r\n                        size: 8,\r\n                        fillColor: '#fff',\r\n                        strokeColor: '#fa5c7c',\r\n                        radius: 2,\r\n                    },\r\n                    label: {\r\n                        borderColor: '#fa5c7c',\r\n                        offsetY: 0,\r\n                        style: {\r\n                            color: '#fff',\r\n                            background: '#fa5c7c',\r\n                        },\r\n\r\n                        text: 'Point Annotation',\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            id: 'areachart-2',\r\n        },\r\n        labels: [\r\n            '13 Nov 2017',\r\n            '14 Nov 2017',\r\n            '15 Nov 2017',\r\n            '16 Nov 2017',\r\n            '17 Nov 2017',\r\n            '20 Nov 2017',\r\n            '21 Nov 2017',\r\n            '22 Nov 2017',\r\n            '23 Nov 2017',\r\n            '24 Nov 2017',\r\n            '27 Nov 2017',\r\n            '28 Nov 2017',\r\n            '29 Nov 2017',\r\n            '30 Nov 2017',\r\n            '01 Dec 2017',\r\n            '04 Dec 2017',\r\n            '05 Dec 2017',\r\n            '06 Dec 2017',\r\n            '07 Dec 2017',\r\n            '08 Dec 2017',\r\n        ],\r\n        colors: ['#39afd1'],\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            width: [3],\r\n            curve: 'straight',\r\n        },\r\n        title: {\r\n            text: 'Line with Annotations',\r\n            align: 'left',\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    // chart data\r\n    const apexLineChartWithAnnotationData = [\r\n        {\r\n            name: 'Prices',\r\n            data: [\r\n                8107.85, 8128, 8122.9, 8165.5, 8340.7, 8423.7, 8423.5, 8514.3, 8481.85, 8487.7, 8506.9, 8626.2, 8668.95,\r\n                8602.3, 8607.55, 8512.9, 8496.25, 8600.65, 8881.1, 9340.85,\r\n            ],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Line Chart with Annotations</h4>\r\n                <Chart\r\n                    options={apexLineChartWithAnnotationOpts}\r\n                    series={apexLineChartWithAnnotationData}\r\n                    type=\"line\"\r\n                    className=\"apex-charts\"\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default LineAnnotationChart;\r\n","import Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst SplineAreaChart = () => {\r\n    // default options\r\n    const apexAreaChart1Opts: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'area',\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            width: 3,\r\n            curve: 'smooth',\r\n        },\r\n        colors: ['#727cf5', '#6c757d'],\r\n        legend: {\r\n            offsetY: -10,\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false,\r\n                position: 'topRight',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n    };\r\n\r\n    // chart data\r\n    const apexAreaChart1Data = [\r\n        {\r\n            name: 'Series 1',\r\n            data: [31, 40, 28, 51, 42, 109, 100],\r\n        },\r\n        {\r\n            name: 'Series 2',\r\n            data: [11, 32, 45, 32, 34, 52, 41],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Spline Area</h4>\r\n                <Chart options={apexAreaChart1Opts} series={apexAreaChart1Data} type=\"area\" className=\"apex-charts\" />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SplineAreaChart;\r\n","import Chart from 'react-apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\nconst StackedAreaChart = () => {\r\n    // default options\r\n    const apexAreaChartOpts: ApexOptions = {\r\n        chart: {\r\n            height: 422,\r\n            type: 'area',\r\n            stacked: true,\r\n            events: {\r\n                selection: function (chart, e) {\r\n                    console.log(new Date(e.xaxis.min));\r\n                },\r\n            },\r\n        },\r\n        colors: ['#727cf5', '#0acf97', '#e3eaef'],\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            width: 2,\r\n            curve: 'smooth',\r\n        },\r\n        fill: {\r\n            gradient: {\r\n                opacityFrom: 0.6,\r\n                opacityTo: 0.8,\r\n            },\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'left',\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    /*\r\n     * generate day wise time series\r\n     */\r\n    const generateDayWiseTimeSeries = (\r\n        baseval: number,\r\n        count: number,\r\n        yrange: { min: number; max: number }\r\n    ): [number, number][] => {\r\n        let i = 0;\r\n        let series: [number, number][] = [];\r\n        while (i < count) {\r\n            let x = baseval;\r\n            let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n\r\n            series.push([x, y]);\r\n            baseval += 86400000;\r\n            i++;\r\n        }\r\n        return series;\r\n    };\r\n\r\n    // chart data\r\n    const apexAreaChart2Data = [\r\n        {\r\n            name: 'South',\r\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\r\n                min: 10,\r\n                max: 60,\r\n            }),\r\n        },\r\n        {\r\n            name: 'North',\r\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\r\n                min: 10,\r\n                max: 20,\r\n            }),\r\n        },\r\n\r\n        {\r\n            name: 'Central',\r\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\r\n                min: 10,\r\n                max: 15,\r\n            }),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Stacked Area</h4>\r\n                <Chart options={apexAreaChartOpts} series={apexAreaChart2Data} type=\"area\" className=\"apex-charts\" />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default StackedAreaChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst BarChart = () => {\r\n    // default options\r\n    const apexBarChartOpts: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'bar',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                dataLabels: {\r\n                    position: 'top',\r\n                },\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n            offsetX: -6,\r\n            style: {\r\n                fontSize: '12px',\r\n                colors: ['#fff'],\r\n            },\r\n        },\r\n        colors: ['#fa5c7c', '#6c757d'],\r\n        stroke: {\r\n            show: true,\r\n            width: 1,\r\n            colors: ['#fff'],\r\n        },\r\n\r\n        xaxis: {\r\n            categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\r\n        },\r\n        legend: {\r\n            offsetY: -10,\r\n        },\r\n        states: {\r\n            hover: {\r\n                filter: {\r\n                    type: 'none',\r\n                },\r\n            },\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n        },\r\n    };\r\n\r\n    // chart data\r\n    const apexBarChartData = [\r\n        {\r\n            name: 'Series 1',\r\n            data: [44, 55, 41, 64, 22, 43, 21],\r\n        },\r\n        {\r\n            name: 'Series 2',\r\n            data: [53, 32, 33, 52, 13, 44, 32],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Bar Chart</h4>\r\n                <Chart options={apexBarChartOpts} series={apexBarChartData} type=\"bar\" className=\"apex-charts\" />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BarChart;\r\n","import Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst StackedBarChart = () => {\r\n    // default options\r\n    const apexBarChartStackedOpts: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'bar',\r\n            stacked: true,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: true,\r\n            },\r\n        },\r\n        stroke: {\r\n            show: false,\r\n        },\r\n        xaxis: {\r\n            categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\r\n            labels: {\r\n                formatter: function (val) {\r\n                    return val + 'K';\r\n                },\r\n            },\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: undefined,\r\n            },\r\n        },\r\n        colors: ['#727cf5', '#0acf97', '#fa5c7c', '#6c757d', '#39afd1'],\r\n        tooltip: {\r\n            y: {\r\n                formatter: function (val) {\r\n                    return val + 'K';\r\n                },\r\n            },\r\n        },\r\n        fill: {\r\n            opacity: 1,\r\n        },\r\n        states: {\r\n            hover: {\r\n                filter: {\r\n                    type: 'none',\r\n                },\r\n            },\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'center',\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n        },\r\n    };\r\n\r\n    // chart data\r\n    const apexBarChartStackedData = [\r\n        {\r\n            name: 'Marine Sprite',\r\n            data: [44, 55, 41, 37, 22, 43, 21],\r\n        },\r\n        {\r\n            name: 'Striking Calf',\r\n            data: [53, 32, 33, 52, 13, 43, 32],\r\n        },\r\n        {\r\n            name: 'Tank Picture',\r\n            data: [12, 17, 11, 9, 15, 11, 20],\r\n        },\r\n        {\r\n            name: 'Bucket Slope',\r\n            data: [9, 7, 5, 8, 6, 9, 4],\r\n        },\r\n        {\r\n            name: 'Reborn Kid',\r\n            data: [25, 12, 19, 32, 25, 24, 10],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Stacked Bar Chart</h4>\r\n                <Chart\r\n                    options={apexBarChartStackedOpts}\r\n                    series={apexBarChartStackedData}\r\n                    type=\"bar\"\r\n                    className=\"apex-charts\"\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default StackedBarChart;\r\n","import Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst DonutChart = () => {\r\n    // default options\r\n    const apexDonutOpts: ApexOptions = {\r\n        chart: {\r\n            height: 320,\r\n            type: 'pie',\r\n        },\r\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\r\n        colors: ['#727cf5', '#6c757d', '#0acf97', '#fa5c7c', '#e3eaef'],\r\n        legend: {\r\n            show: true,\r\n            position: 'bottom',\r\n            horizontalAlign: 'center',\r\n            floating: false,\r\n            fontSize: '14px',\r\n            offsetX: 0,\r\n            offsetY: -10,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        height: 240,\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    // chart data\r\n    const apexDonutData: number[] = [44, 55, 41, 17, 15];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Donut Chart</h4>\r\n                <Chart\r\n                    options={apexDonutOpts}\r\n                    series={apexDonutData}\r\n                    type=\"donut\"\r\n                    height={320}\r\n                    className=\"apex-charts\"\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default DonutChart;\r\n","import Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst PieChart = () => {\r\n    // default options\r\n    const apexDonutOpts: ApexOptions = {\r\n        chart: {\r\n            height: 320,\r\n            type: 'pie',\r\n        },\r\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\r\n        colors: ['#727cf5', '#6c757d', '#0acf97', '#fa5c7c', '#e3eaef'],\r\n        legend: {\r\n            show: true,\r\n            position: 'bottom',\r\n            horizontalAlign: 'center',\r\n            floating: false,\r\n            fontSize: '14px',\r\n            offsetX: 0,\r\n            offsetY: -10,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        height: 240,\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    // chart data\r\n    const apexDonutData: number[] = [44, 55, 41, 17, 15];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Pie Chart</h4>\r\n                <Chart options={apexDonutOpts} series={apexDonutData} type=\"pie\" height={320} className=\"apex-charts\" />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PieChart;\r\n","import Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst MixedChart = () => {\r\n    // default options\r\n    var apexMixedOpts: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            stacked: false,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        stroke: {\r\n            width: [0, 2, 4],\r\n            curve: 'smooth',\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: '50%',\r\n            },\r\n        },\r\n        colors: ['#727cf5', '#39afd1', '#fa5c7c'],\r\n        fill: {\r\n            opacity: [0.85, 0.25, 1],\r\n            gradient: {\r\n                inverseColors: false,\r\n                shade: 'light',\r\n                type: 'vertical',\r\n                opacityFrom: 0.85,\r\n                opacityTo: 0.55,\r\n                stops: [0, 100, 100, 100],\r\n            },\r\n        },\r\n        labels: [\r\n            '01/01/2003',\r\n            '02/01/2003',\r\n            '03/01/2003',\r\n            '04/01/2003',\r\n            '05/01/2003',\r\n            '06/01/2003',\r\n            '07/01/2003',\r\n            '08/01/2003',\r\n            '09/01/2003',\r\n            '10/01/2003',\r\n            '11/01/2003',\r\n        ],\r\n        markers: {\r\n            size: 0,\r\n        },\r\n        legend: {\r\n            offsetY: -10,\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Points',\r\n            },\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            intersect: false,\r\n            y: {\r\n                formatter: function (y) {\r\n                    if (typeof y !== 'undefined') {\r\n                        return y.toFixed(0) + ' points';\r\n                    }\r\n                    return y;\r\n                },\r\n            },\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n        },\r\n    };\r\n\r\n    // chart data\r\n    const apexMixedData = [\r\n        {\r\n            name: 'Team A',\r\n            type: 'column',\r\n            data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30],\r\n        },\r\n        {\r\n            name: 'Team B',\r\n            type: 'area',\r\n            data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43],\r\n        },\r\n        {\r\n            name: 'Team C',\r\n            type: 'line',\r\n            data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Line, Bar and Area (Mixed)</h4>\r\n                <Chart\r\n                    options={apexMixedOpts}\r\n                    series={apexMixedData}\r\n                    type=\"line\"\r\n                    height={320}\r\n                    className=\"apex-charts\"\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default MixedChart;\r\n","import { Row, Col } from 'react-bootstrap';\r\nimport { PageTitle } from 'components';\r\nimport LineChart from './LineChart';\r\nimport LineAnnotationChart from './LineAnnotationChart';\r\nimport SplineAreaChart from './SplineAreaChart';\r\nimport StackedAreaChart from './StackedAreaChart';\r\nimport BarChart from './BarChart';\r\nimport StackedBarChart from './StackedBarChart';\r\nimport DonutChart from './DonutChart';\r\nimport PieChart from './PieChart';\r\nimport MixedChart from './MixedChart';\r\n\r\nconst ApexChart = () => {\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Charts', path: '/features/charts/apex' },\r\n                    { label: 'Apex', path: '/features/charts/apex', active: true },\r\n                ]}\r\n                title={'Apex Charts'}\r\n            />\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <LineChart />\r\n                </Col>\r\n\r\n                <Col xl={6}>\r\n                    <LineAnnotationChart />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <SplineAreaChart />\r\n                </Col>\r\n\r\n                <Col xl={6}>\r\n                    <StackedAreaChart />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <BarChart />\r\n                </Col>\r\n\r\n                <Col xl={6}>\r\n                    <StackedBarChart />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <DonutChart />\r\n                </Col>\r\n\r\n                <Col xl={6}>\r\n                    <PieChart />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <MixedChart />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { ApexChart };\r\n"],"names":["Card","className","options","chart","height","type","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","title","text","align","style","fontSize","grid","row","opacity","borderColor","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","series","name","data","apexLineChartWithAnnotationOpts","annotations","y","label","color","background","x","Date","getTime","orientation","points","marker","fillColor","strokeColor","radius","id","labels","tooltip","fixed","apexAreaChartOpts","stacked","events","selection","e","console","log","fill","gradient","opacityFrom","opacityTo","generateDayWiseTimeSeries","baseval","count","yrange","i","Math","floor","random","push","apexAreaChart2Data","plotOptions","bar","horizontal","states","hover","filter","apexBarChartStackedOpts","formatter","val","undefined","columnWidth","inverseColors","shade","stops","shared","intersect","toFixed","ApexChart","breadCrumbItems","path","active","Row","Col","xl"],"sourceRoot":""}
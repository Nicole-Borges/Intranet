{"version":3,"file":"static/js/3370.03c1c4c7.chunk.js","mappings":"+MAsEA,UA/DqB,WACjB,OAAkCA,EAAAA,EAAAA,MAA1BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAEZC,GAAkBC,EAAAA,EAAAA,QAAuB,MAEvCC,EAAqBH,GAAY,SAACI,GAAD,MAAY,CACjDD,iBAAkBC,EAAMC,OAAOF,qBAD3BA,iBAeFG,GAAmBC,EAAAA,EAAAA,cACrB,SAACC,GACG,GAAIL,EAAkB,CAClB,GAAIF,GAAmBA,EAAgBQ,SAAWR,EAAgBQ,QAAQC,SAASF,EAAEG,QACjF,OAEAZ,GAASa,EAAAA,EAAAA,UAIrB,CAACX,EAAiBF,EAAUI,IAUhC,OAPAU,EAAAA,EAAAA,YAAU,WAEN,OADAC,SAASC,iBAAiB,YAAaT,GAAkB,GAClD,WACHQ,SAASE,oBAAoB,YAAaV,GAAkB,QAKhE,iCACI,iBAAKW,UAAU,UAAUC,IAAKjB,EAA9B,WACI,iBAAKgB,UAAU,iBAAf,WACI,SAAC,KAAD,CAAME,GAAG,IAAIF,UAAU,2BAA2BG,QAhC9C,SAACZ,GACjBA,EAAEa,iBACFtB,GAASa,EAAAA,EAAAA,QA8BG,UACI,cAAGK,UAAU,iCAEjB,eAAIA,UAAU,MAAd,0BAGJ,SAAC,IAAD,CAAWK,MAAO,CAAEC,UAAW,OAAQC,OAAQ,KAASC,QAAS,IAAKC,iBAAkB,IAAxF,UACI,iBAAKT,UAAU,yBAAf,UACK,KACD,SAAC,KAAD,aAKZ,gBAAKA,UAAU","sources":["layouts/RightSidebar.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleBar from 'simplebar-react';\r\nimport { useRedux } from 'hooks';\r\nimport { hideRightSidebar } from 'redux/actions';\r\nimport { ThemeCustomizer } from 'components';\r\n\r\nconst RightSideBar = () => {\r\n    const { dispatch, appSelector } = useRedux();\r\n\r\n    const rightBarNodeRef = useRef<HTMLDivElement>(null);\r\n\r\n    const { showRightSidebar } = appSelector((state) => ({\r\n        showRightSidebar: state.Layout.showRightSidebar,\r\n    }));\r\n\r\n    /**\r\n     * Handles the close\r\n     */\r\n    const handleClose = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        dispatch(hideRightSidebar());\r\n    };\r\n\r\n    /**\r\n     * Handle the click anywhere in doc\r\n     */\r\n    const handleOtherClick = useCallback(\r\n        (e) => {\r\n            if (showRightSidebar) {\r\n                if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) {\r\n                    return;\r\n                } else {\r\n                    dispatch(hideRightSidebar());\r\n                }\r\n            }\r\n        },\r\n        [rightBarNodeRef, dispatch, showRightSidebar]\r\n    );\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleOtherClick, false);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleOtherClick, false);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"end-bar\" ref={rightBarNodeRef}>\r\n                <div className=\"rightbar-title\">\r\n                    <Link to=\"#\" className=\"end-bar-toggle float-end\" onClick={handleClose}>\r\n                        <i className=\"dripicons-cross noti-icon\"></i>\r\n                    </Link>\r\n                    <h5 className=\"m-0\">Settings</h5>\r\n                </div>\r\n\r\n                <SimpleBar style={{ maxHeight: '100%', zIndex: 10000 }} timeout={500} scrollbarMaxSize={320}>\r\n                    <div className=\"rightbar-content h-100\">\r\n                        {' '}\r\n                        <ThemeCustomizer />\r\n                    </div>\r\n                </SimpleBar>\r\n            </div>\r\n\r\n            <div className=\"rightbar-overlay\"></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RightSideBar;\r\n"],"names":["useRedux","dispatch","appSelector","rightBarNodeRef","useRef","showRightSidebar","state","Layout","handleOtherClick","useCallback","e","current","contains","target","hideRightSidebar","useEffect","document","addEventListener","removeEventListener","className","ref","to","onClick","preventDefault","style","maxHeight","zIndex","timeout","scrollbarMaxSize"],"sourceRoot":""}
{"version":3,"file":"static/js/9434.0947b43e.chunk.js","mappings":"kOAKMA,EAAQ,WACV,OACI,SAAC,IAAD,WACI,UAAC,SAAD,YACI,eAAIC,UAAU,eAAd,uBACA,cAAGA,UAAU,qBAAb,0DAEA,eAAGA,UAAU,aAAb,4CACoC,KAChC,SAAC,IAAD,CAAgBC,UAAU,MAAMC,SAAS,SAAC,IAAD,CAASC,GAAG,kBAAZ,6BAAzC,UACI,SAAC,KAAD,CAAMC,GAAG,IAAT,8BACc,IAJtB,mLAOI,SAAC,IAAD,CAAgBH,UAAU,MAAMC,SAAS,SAAC,IAAD,CAASC,GAAG,kBAAZ,2BAAzC,UACI,SAAC,KAAD,CAAMC,GAAG,IAAT,wBACc,IATtB,kMAYI,SAAC,IAAD,CACIH,UAAU,MACVC,SAAS,SAAC,IAAD,CAASC,GAAG,kBAAZ,oCAFb,UAII,SAAC,KAAD,CAAMC,GAAG,IAAT,0BAhBR,iDAmBI,SAAC,IAAD,CAAgBH,UAAU,MAAMC,SAAS,SAAC,IAAD,CAASC,GAAG,kBAAZ,6BAAzC,UACI,SAAC,KAAD,CAAMC,GAAG,IAAT,gCApBR,8DA6BVC,EAAY,WAQd,OACI,SAAC,IAAD,WACI,UAAC,SAAD,YACI,eAAIL,UAAU,eAAd,8BACA,cAAGA,UAAU,qBAAb,+EAX2B,CACnC,CAAEC,UAAW,OACb,CAAEA,UAAW,UACb,CAAEA,UAAW,SACb,CAAEA,UAAW,SASOK,KAAI,SAACC,EAAWC,GAAZ,OACZ,SAAC,IAAD,CAEIP,UAAWM,EAAUN,UACrBC,SACI,UAAC,IAAD,CAASC,GAAE,kBAAaI,EAAUN,WAAlC,yBACe,4BAASM,EAAUN,YADlC,OAJR,UASI,UAAC,IAAD,CAAQQ,QAAQ,OAAOT,UAAU,OAAjC,wBACgBO,EAAUN,cATrBO,EAAME,qBAkB7BC,EAAmB,WACrB,OACI,SAAC,IAAD,WACI,UAAC,SAAD,YACI,eAAIX,UAAU,eAAd,gCACA,eAAGA,UAAU,qBAAb,gCACsB,uCADtB,4LAGmB,oCAHnB,QAG+C,qCAH/C,oBAG0F,KACtF,6CAJJ,gCAMA,SAAC,IAAD,CAAgBE,SAAS,SAAC,IAAD,CAASC,GAAG,mBAAZ,sBAAzB,UACI,iBAAMH,UAAU,iBAAhB,UACI,SAAC,IAAD,CAAQY,UAAQ,EAACC,MAAO,CAAEC,cAAe,QAAzC,uCAUlBC,EAAc,WAChB,OACI,SAAC,IAAD,WACI,UAAC,SAAD,YACI,eAAIf,UAAU,eAAd,wBACA,cAAGA,UAAU,qBAAb,0CAEA,SAAC,IAAD,CACIC,UAAU,MACVC,SACI,UAAC,IAAD,YACI,oCADJ,KACqB,gCADrB,KACiC,mCAJzC,UAQI,SAAC,IAAD,CAAQO,QAAQ,YAAhB,uCAgCpB,UAzBiB,WACb,OACI,iCACI,SAAC,KAAD,CACIO,gBAAiB,CACb,CAAEC,MAAO,UAAWC,KAAM,gBAC1B,CAAED,MAAO,WAAYC,KAAM,eAAgBC,QAAQ,IAEvDC,MAAO,cAGX,UAAC,IAAD,YACI,UAAC,IAAD,CAAKC,GAAI,EAAT,WACI,SAACtB,EAAD,KACA,SAACY,EAAD,QAEJ,UAAC,IAAD,CAAKU,GAAI,EAAT,WACI,SAAChB,EAAD,KACA,SAACU,EAAD","sources":["pages/uikit/Tooltips.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { Row, Col, Card, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\r\nimport { PageTitle } from 'components';\r\nimport { PopoverDirection } from './types';\r\n\r\nconst Basic = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Examples</h4>\r\n                <p className=\"text-muted font-14\">Hover over the links below to see tooltips.</p>\r\n\r\n                <p className=\"muted mb-0\">\r\n                    Tight pants next level keffiyeh{' '}\r\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"overlay-example\"> Default title </Tooltip>}>\r\n                        <Link to=\"#\"> you probably </Link>\r\n                    </OverlayTrigger>{' '}\r\n                    haven't heard of them. Photo booth beard raw denim letterpress vegan messenger bag stumptown.\r\n                    Farm-to-table seitan, mcsweeney's fixie sustainable quinoa 8-bit american apparel\r\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"overlay-example\"> Another one </Tooltip>}>\r\n                        <Link to=\"#\"> have a </Link>\r\n                    </OverlayTrigger>{' '}\r\n                    terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats. Tofu biodiesel\r\n                    williamsburg marfa, four loko mcsweeney's cleanse vegan chambray. A really ironic artisan\r\n                    <OverlayTrigger\r\n                        placement=\"top\"\r\n                        overlay={<Tooltip id=\"overlay-example\"> Another one here too </Tooltip>}\r\n                    >\r\n                        <Link to=\"#\"> whatever </Link>\r\n                    </OverlayTrigger>\r\n                    keytar, scenester farm-to-table banksy Austin\r\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"overlay-example\"> The last tip! </Tooltip>}>\r\n                        <Link to=\"#\"> twitter handle </Link>\r\n                    </OverlayTrigger>\r\n                    freegan cred raw denim single-origin coffee viral.\r\n                </p>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst Direction = () => {\r\n    const directions: PopoverDirection[] = [\r\n        { placement: 'top' },\r\n        { placement: 'bottom' },\r\n        { placement: 'right' },\r\n        { placement: 'left' },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Four Directions</h4>\r\n                <p className=\"text-muted font-14\">Four options are available: top, right, bottom, and left aligned.</p>\r\n\r\n                {directions.map((direction, index) => (\r\n                    <OverlayTrigger\r\n                        key={index.toString()}\r\n                        placement={direction.placement}\r\n                        overlay={\r\n                            <Tooltip id={`tooltip-${direction.placement}`}>\r\n                                Tooltip on <strong>{direction.placement}</strong>.\r\n                            </Tooltip>\r\n                        }\r\n                    >\r\n                        <Button variant=\"info\" className=\"me-1\">\r\n                            Tooltip on {direction.placement}\r\n                        </Button>\r\n                    </OverlayTrigger>\r\n                ))}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DisabledElements = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Disabled Elements</h4>\r\n                <p className=\"text-muted font-14\">\r\n                    Elements with the <code>disabled</code> attribute aren’t interactive, meaning users cannot hover or\r\n                    click them to trigger a popover (or tooltip). As a workaround, you’ll want to trigger the popover\r\n                    from a wrapper <code>&lt;div&gt;</code> or <code>&lt;span&gt;</code> and override the{' '}\r\n                    <code>pointer-events</code> on the disabled element.\r\n                </p>\r\n                <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Tooltip!</Tooltip>}>\r\n                    <span className=\"d-inline-block\">\r\n                        <Button disabled style={{ pointerEvents: 'none' }}>\r\n                            Disabled button\r\n                        </Button>\r\n                    </span>\r\n                </OverlayTrigger>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst HtmlContent = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Html Tags</h4>\r\n                <p className=\"text-muted font-14\">And with custom HTML added:</p>\r\n\r\n                <OverlayTrigger\r\n                    placement=\"top\"\r\n                    overlay={\r\n                        <Tooltip>\r\n                            <em>Tooltip</em> <u>with</u> <b>HTML</b>\r\n                        </Tooltip>\r\n                    }\r\n                >\r\n                    <Button variant=\"secondary\">Tooltip with HTML</Button>\r\n                </OverlayTrigger>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst Tooltips = () => {\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Base UI', path: '/ui/tooltips' },\r\n                    { label: 'Tooltips', path: '/ui/tooltips', active: true },\r\n                ]}\r\n                title={'Tooltips'}\r\n            />\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <Basic />\r\n                    <DisabledElements />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <Direction />\r\n                    <HtmlContent />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tooltips;\r\n"],"names":["Basic","className","placement","overlay","id","to","Direction","map","direction","index","variant","toString","DisabledElements","disabled","style","pointerEvents","HtmlContent","breadCrumbItems","label","path","active","title","xl"],"sourceRoot":""}